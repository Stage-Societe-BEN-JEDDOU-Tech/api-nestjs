generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Buyer {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  contact  String[]
  name     String?
  password String
  Book     Book[]
}

model Seller {
  id        Int       @id @default(autoincrement())
  name      String?
  email     String    @unique
  contact   String[]
  password  String
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  Post      Post[]
}

model Post {
  id          Int        @id @default(autoincrement())
  title       String
  description String
  photo       String[]
  condition   String[]
  adress      String
  city        String
  price       Float
  view        Int        @default(0)
  seller      Seller     @relation(fields: [sellerId], references: [id])
  categories  Category[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  sellerId    Int
  isAvailable Boolean    @default(false)
  isSold      Boolean    @default(false)
  Book        Book[]
}

model Category {
  id        Int       @id @default(autoincrement())
  label     String
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  Post      Post[]
}

model Book {
  id        Int       @id @default(autoincrement())
  post      Post      @relation(fields: [postId], references: [id])
  buyer     Buyer     @relation(fields: [buyerId], references: [id])
  postId    Int
  buyerId   Int
  message   String?
  isSold    Boolean   @default(false)
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  Message   Message[]
}

model Message {
  id        Int      @id @default(autoincrement())
  content   String
  book      Book     @relation(fields: [bookId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  bookId    Int
}
